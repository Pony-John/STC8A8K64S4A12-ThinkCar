C51 COMPILER V9.56.0.0   PWM                                                               10/28/2017 22:05:05 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN .\Objects\pwm.obj
COMPILER INVOKED BY: E:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE pwm.c OPTIMIZE(8,SPEED) DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\pwm.lst) OBJECT(.\Objects\pwm.obj)

line level    source

   1          #include <stc8.h>
   2          
   3          void pwm_init();                                                                //PWM CYCLE = 0x7530
   4          void pwm0_setWide(unsigned int time_h);
   5          void pwm1_setWide(unsigned int time_h);
   6          void pwm2_setWide(unsigned int time_h);
   7          void pwm_speed(float volt);
   8          void pwm_direct(float angle);
   9          void pwm_brake();
  10          
  11          void pwm_init()
  12          {
  13   1              P_SW2 |= 0x80;
  14   1          PWMCKS = 0x0f;                              //PWM时钟为系统时钟/16
  15   1          PWMC = 0x7530;                              //设置PWM周期为7530H个PWM时钟
  16   1              //PWMC = 0x1770;
  17   1              PWM0T1= 0x0000;                             //PWM0在计数值为08caH地方输出低电平
  18   1          PWM0T2= 0x0000;                             //PWM0在计数值为0100H地方输出高电平   
  19   1          PWM0CR= 0x80;                                                               //使能PWM0输出
  20   1              PWM1T1= 0x08ca;                             //PWM1在计数值为08caH地方输出低电平
  21   1              //PWM1T1= 0x01c2;  
  22   1          PWM1T2= 0x0000;                             //PWM1在计数值为0000H地方输出高平   
  23   1          PWM1CR= 0x80;                                                               //使能PWM1输出
  24   1          PWM2T1= 0x08ca;                             //PWM2在计数值为08caH地方输出低电平
  25   1          PWM2T2= 0x0000;                             //PWM2在计数值为0100H地方输出高电平   
  26   1          PWM2CR= 0x80;                               //使能PWM2输出
  27   1          P_SW2 &= ~0x80;
  28   1      
  29   1          PWMCR |= 0x80;                               //启动PWM模块
  30   1      }
  31          void pwm0_setWide(unsigned int time_h)          //for speed control
  32          {
  33   1              //PWMCR &= ~0x80;                                                       //stop pwm
  34   1              P_SW2 |= 0x80;
  35   1              PWM0T1 = time_h;
  36   1              P_SW2 &= ~0x80;
  37   1              //PWMCR |= 0x80;                                                        //start pwm
  38   1      }
  39          
  40          
  41          void pwm1_setWide(unsigned int time_h)          //for speed control
  42          {       
  43   1              //PWMCR &= ~0x80;                                                       //stop pwm
  44   1              P_SW2 |= 0x80;
  45   1              PWM1T1 = time_h;
  46   1              P_SW2 &= ~0x80;
  47   1              //PWMCR |= 0x80;                                                //start pwm
  48   1      }
  49          
  50          void pwm2_setWide(unsigned int time_h)          //for direct control
  51          {
  52   1              //PWMCR &= ~0x80;                                                       //stop pwm
  53   1              P_SW2 |= 0x80;
  54   1              PWM2T1 = time_h;
C51 COMPILER V9.56.0.0   PWM                                                               10/28/2017 22:05:05 PAGE 2   

  55   1              P_SW2 &= ~0x80;
  56   1              //PWMCR |= 0x80;                                                //start pwm
  57   1      }
  58          void pwm_speed(float volt)
  59          {
  60   1              unsigned int temp;
  61   1              /*if(volt < 2)
  62   1              {
  63   1                      volt = 2;
  64   1              }*/
  65   1              
  66   1              temp = (unsigned int)(volt * 0x1046);           
  67   1              pwm1_setWide(temp);                                             
  68   1      }
  69          
  70          void pwm_direct(float angle)
  71          {
  72   1              int temp;
  73   1              temp = 0x08ca - (int)(angle * 16);      /*while temp = n, the car go along a straight line;
  74   1                                                                                                              while temp < n, the car turns left; 
  75   1                                                                                                              while temp > n, the car turns rignt;*/
  76   1              if(temp > 3000)
  77   1              {
  78   2                      temp = 3000;
  79   2              }
  80   1              if(temp < 1500)
  81   1              {
  82   2                      temp = 1500;
  83   2              }
  84   1              pwm2_setWide(temp);                                             
  85   1      }
  86          
  87          void pwm_brake()
  88          {
  89   1              pwm1_setWide(0);        
  90   1      }
  91          
  92          
  93          
  94          
  95          
  96          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    234    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
